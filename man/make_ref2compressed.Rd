% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jambio-plot.R
\name{make_ref2compressed}
\alias{make_ref2compressed}
\title{Create a ref2compressed function to compress GR gaps}
\usage{
make_ref2compressed(
  gr,
  gapWidth = 200,
  keepValues = FALSE,
  upstream = 50000,
  upstreamGapWidth = gapWidth * 3,
  downstream = 50000,
  downstreamGapWidth = gapWidth * 3,
  nBreaks = 7,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{gr}{GRanges object containing regions not to compress. Regions
which are unstranded gaps are compressed to fixed width.}

\item{gapWidth}{integer value used for fixed gap width, or when
NULL the gap width is defined as 3 times the median feature width.}

\item{keepValues}{logical indicating whether to keep feature values
in the GRanges data.}

\item{upstream, downstream, upstreamGapWidth, downstreamGapWidth}{used
to define the compression of coordinates upstream and downstream
the supplied GRanges. In reality, the upstream range and upstream
gap width defines a multiplier, and all upstream coordinates are
compressed through zero. Similarly, all downstream coordinates
are compressed to 10 billion, which is roughly 3 times the size
of the human genome.}

\item{nBreaks}{the default number of x-axis coordinate breaks used
in ggplot labeling.}

\item{verbose}{logical indicating whether to print verbose output.}

\item{...}{additional arguments are ignored.}
}
\value{
list with \code{trans_grc} which is class \code{"trans"} suitable
for use in ggplot2 functions; \code{transform} a function that converts
chromosome coordinates to compressed coordinates; \code{inverse} a function
that converts compressed coordinates to chromosome coordinates;
\code{scale_x_grc} a function used similar to \code{ggplot2::scale_x_continuous()}
during ggplot2 creation; \code{gr} a function that compresses coordinates
in a \code{GRanges} object; \code{grl} a function that compresses coordinates in
a \code{GRangesList} object. Attributes \code{"lookupCoordDF"} is a two-column
data.frame with chromosome coordinates and compressed coordinates,
which is used to create the other transformation functions via
\code{stats::approx()}; \code{"gapWidth"} the gap width used, since it can
be programmatically defined; \code{"gr"} the \code{GRanges} input data used
to train the transformation.
}
\description{
Create a ref2compressed function to compress GR gaps
}
\details{
This function takes a set of GRanges which are to be maintained
with fixed aspect ratio, and it defines a function to compress
coordinates of the gaps between GRanges features.
}
\examples{
suppressPackageStartupMessages(library(GenomicRanges));
suppressPackageStartupMessages(library(ggplot2));

data(test_exon_wide_gr);
# To plot a simple GRanges object
widedf <- grl2df(test_exon_wide_gr);
ggWide <- ggplot(widedf, aes(x=x, y=y, group=id, fill=feature_type)) +
   geom_polygon() +
   colorjam::theme_jam() +
   colorjam::scale_fill_jam() +
   xlab("chr1") +
   ggtitle("exons (introns as-is)")
print(ggWide);

# Now compress the introns keeping axis labels
ref2c <- make_ref2compressed(test_exon_wide_gr,
   nBreaks=10);
ggWide2 <- ggWide +
   scale_x_continuous(trans=ref2c$trans_grc) +
   xlab("chr1 (compressed introns)") +
   ggtitle("exons (compressed introns)")
print(ggWide2);

}
\seealso{
\code{grl2df()}, \code{test_junc_wide_gr}

Other jam GRanges functions: 
\code{\link{addGRLgaps}()},
\code{\link{addGRgaps}()},
\code{\link{annotateGRLfromGRL}()},
\code{\link{annotateGRfromGR}()},
\code{\link{assignGRLexonNames}()},
\code{\link{closestExonToJunctions}()},
\code{\link{combineGRcoverage}()},
\code{\link{exoncov2polygon}()},
\code{\link{findOverlapsGRL}()},
\code{\link{getFirstStrandedFromGRL}()},
\code{\link{getGRLgaps}()},
\code{\link{getGRcoverageFromBw}()},
\code{\link{getGRgaps}()},
\code{\link{grl2df}()},
\code{\link{jam_isDisjoint}()},
\code{\link{sortGRL}()},
\code{\link{spliceGR2junctionDF}()},
\code{\link{stackJunctions}()}

Other splicejam core functions: 
\code{\link{exoncov2polygon}()},
\code{\link{gene2gg}()},
\code{\link{grl2df}()},
\code{\link{plotSashimi}()},
\code{\link{prepareSashimi}()}

Other jam RNA-seq functions: 
\code{\link{assignGRLexonNames}()},
\code{\link{closestExonToJunctions}()},
\code{\link{combineGRcoverage}()},
\code{\link{defineDetectedTx}()},
\code{\link{detectedTxInfo}()},
\code{\link{exoncov2polygon}()},
\code{\link{flattenExonsBy}()},
\code{\link{groups2contrasts}()},
\code{\link{makeTx2geneFromGtf}()},
\code{\link{runDiffSplice}()},
\code{\link{sortSamples}()},
\code{\link{spliceGR2junctionDF}()}
}
\concept{jam GRanges functions}
\concept{jam RNA-seq functions}
\concept{splicejam core functions}
