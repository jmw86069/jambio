% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jambio-design.R
\name{sortSamples}
\alias{sortSamples}
\title{Sort biological sample labels for experimental design}
\usage{
sortSamples(
  x,
  controlTerms = c("WT|wildtype", "(^|[-_ ])(NT|NTC)($|[-_ ]|[0-9])", "ETOH",
    "control|ctrl|ctl", "Vehicle|veh", "none|empty|blank", "scramble", "ttx", "PBS",
    "knockout", "mutant"),
  sortFunc = jamba::mixedSort,
  preControlTerms = NULL,
  postControlTerms = NULL,
  ignore.case = TRUE,
  boundary = TRUE,
  perl = boundary,
  keepFactorsAsIs = TRUE,
  ...
)
}
\arguments{
\item{x}{character vector or factor}

\item{controlTerms}{vector of regular expression patterns used to
determine control terms, where the patterns are matched and
returned in order.}

\item{preControlTerms}{vector or NULL, optional control
terms or regular expressions to use before the \code{controlTerms}
above. This argument is used as a convenient prefix to the
default terms.}

\item{postControlTerms}{vector or NULL, optional control
terms or regular expressions to use after the \code{controlTerms}
above. This argument is used as a convenient suffix to the
default terms.}

\item{ignore.case}{logical passed to \code{jamba::provigrep()} indicating
whether to ignore case-sensitive matching.}

\item{boundary}{logical indicating whether to require a word
boundary at either the start or end of the control terms.
When TRUE, it uses \code{perl=TRUE} by default, and allows either
perl boundary or an underscore \code{"_"}.}

\item{perl}{logical indicating whether to use Perl regular
expression pattern matching.}

\item{keepFactorsAsIs}{logical indicating whether to maintain
factor level order, if \code{x} is supplied as a factor. If
\code{keepFactorsAsIs==TRUE} then only \code{sort(x)} is returned.}

\item{...}{additional arguments are ignored.}
}
\value{
character vector ordered such that control terms are
preferentially first before non-control terms.
}
\description{
Sort biological sample labels for experimental design
}
\details{
This function sorts a vector of sample labels using typical
heuristics that order typical control groups terms before
test groups. For example, \code{"Vehicle"} would be returned
before \code{"Treatment"} since \code{"Vehicle"} is a recognized control
term.

It also employs \code{jamba::mixedSort()} for
proper alphanumeric sorting, for example so \code{"Time_5hr"} would
be sorted before \code{"Time_12hr"}.
}
\examples{
# the defaults perform well for clear descriptors
sortSamples(c("Trt_12h", "Trt_9h", "Trt_1h", "Trt_9h", "Vehicle"));

# custom terms can be added before the usual control terms
sortSamples(c("Trt_12h", "Trt_9h", "Trt_1h", "Trt_9h", "Fixated", "Vehicle"),
   preControlTerms="fixate");

# custom terms can be added after the usual control terms
sortSamples(c("Trt_12h", "Trt_9h", "Trt_1h", "Trt_9h", "Fixated", "Vehicle"),
   postControlTerms="fixate");

}
\seealso{
Other jam string functions: 
\code{\link{escapeWhitespaceRegexp}()},
\code{\link{strsplitOrdered}()}

Other jam RNA-seq functions: 
\code{\link{assignGRLexonNames}()},
\code{\link{closestExonToJunctions}()},
\code{\link{combineGRcoverage}()},
\code{\link{defineDetectedTx}()},
\code{\link{detectedTxInfo}()},
\code{\link{exoncov2polygon}()},
\code{\link{flattenExonsBy}()},
\code{\link{getGRcoverageFromBw}()},
\code{\link{groups2contrasts}()},
\code{\link{internal_junc_score}()},
\code{\link{makeTx2geneFromGtf}()},
\code{\link{make_ref2compressed}()},
\code{\link{prepareSashimi}()},
\code{\link{runDiffSplice}()},
\code{\link{spliceGR2junctionDF}()}
}
\concept{jam RNA-seq functions}
\concept{jam string functions}
